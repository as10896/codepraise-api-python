name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install libcurl4-openssl-dev & libssl-dev  # necessary for pycurl installation
        run: sudo apt-get install libcurl4-openssl-dev libssl-dev
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        id: setup-python
        with:
          python-version: 3.9
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Cache pip
        uses: actions/cache@v2
        id: cache-pip
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pip-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          pip install pipenv
          pipenv install --dev --system --deploy --ignore-pipfile
      - name: Run Celery worker for tests
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLONE_QUEUE: ${{ secrets.CLONE_QUEUE }}
        run: inv worker.run.test &
      - name: Run tests
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLONE_QUEUE: ${{ secrets.CLONE_QUEUE }}
        run: inv spec
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
  deploy:
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "codepraise-api-python"
          heroku_email: "as10896@gmail.com"

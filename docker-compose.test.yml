x-test-app: &test-app
  build:
    args:
      - INSTALL_DEV=true
  image: codepraise-api-python:debug
  volumes:
    - ./config/secrets:/app/config/secrets
    - ./app/infrastructure/gitrepo/repostore:/app/app/infrastructure/gitrepo/repostore
    - ./coverage:/app/coverage
  environment:
    - API_URL=http://api:8080
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_REGION
    - CLONE_QUEUE
    - GH_TOKEN

x-test-ci: &test-ci
  build:
    args:
      - INSTALL_DEV=true
  image: codepraise-api-python:debug
  volumes:
    - ./app/infrastructure/gitrepo/repostore:/app/app/infrastructure/gitrepo/repostore
    - ./coverage:/app/coverage
  environment:
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_REGION
    - CLONE_QUEUE
    - GH_TOKEN

services:
  worker:
    <<: *test-app
    profiles:
      - tdd
      - bdd
    command: inv worker.run.test

  # `$ docker compose -f docker-compose.test.yml run --rm test`
  test:
    <<: *test-app
    depends_on:
      - worker
    profiles:
      - tdd
    command: inv test

  # For the usage of frontend BDD testing only
  # `$ docker compose -f docker-compose.test.yml --profile bdd up`
  api:
    <<: *test-app
    profiles:
      - bdd
    ports:
      - ${PORT:-8080}:8080
    command: inv api.run.test -h 0.0.0.0

  # For CI with GitHub Actions
  # `$ docker compose -f docker-compose.test.yml run --no-TTY test-ci`
  # `--no-TTY` is necessary for showing streaming logs
  # ref: https://github.com/github/feedback/discussions/11011#discussioncomment-2242923
  worker-ci:
    <<: *test-ci
    profiles:
      - ci
    command: inv worker.run.test

  test-ci:
    <<: *test-ci
    profiles:
      - ci
    depends_on:
      - worker-ci
    command: inv test
